{"version":3,"sources":["api/constants.ts","api/utils.ts","components/Movie/Movie.tsx","components/MoviesList/MoviesList.tsx","components/MainPage/MainPage.tsx","components/MovieDetailsCard/MovieDetailsCard.tsx","components/MovieDetails/MovieDetails.tsx","components/Nav/Nav.tsx","App.tsx","index.tsx"],"names":["API_KEY","BASE_URL","TOP_RATED_MOVIES_URL","getMovies","a","fetch","response","json","result","getMoviesDetails","id","MovieCard","movie","poster_path","className","to","Image","src","size","rounded","vote_average","xmlns","width","height","fill","viewBox","d","title","MoviesList","movies","map","key","MainPage","useState","setMovies","query","setQuery","error","setError","isLoading","setIsLoading","loadMovies","useCallback","results","useEffect","searchFilmByQuery","useMemo","filter","toLowerCase","includes","overview","autoComplete","type","value","onChange","event","target","placeholder","MovieDetailsCard","alt","release_date","split","reverse","join","genres","genre","name","Math","trunc","runtime","href","homepage","style","fontSize","MovieDetailsPage","match","movieDetails","setMovieDetails","Number","params","movieId","loadMoviesDetails","Nav","exact","activeClassName","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd93b722.chunk.js","sourcesContent":["export const API_KEY = 'baa0345639b8ee5b5397540cafa9793b';\nexport const BASE_URL = 'https://api.themoviedb.org/3/movie/';\nexport const TOP_RATED_MOVIES_URL = `${BASE_URL}top_rated?api_key=${API_KEY}`;\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n","import { TOP_RATED_MOVIES_URL, BASE_URL, API_KEY } from './constants';\n\nexport const getMovies = async <T>(): Promise<T> => {\n  const response = await fetch(TOP_RATED_MOVIES_URL);\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getMoviesDetails = async (id: number) => {\n  const response = await fetch(`${BASE_URL}${id}?api_key=${API_KEY}&language=en-US`);\n\n  const result = await response.json();\n\n  return result;\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'semantic-ui-react';\nimport { BASE_POSTER_URL } from '../../api/constants';\nimport './Movie.scss';\n\ninterface Props{\n  movie: Movie;\n}\n\nexport const MovieCard: FC<Props> = ({ movie }) => {\n  const {\n    id,\n    poster_path,\n  } = movie;\n\n  return (\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-2\">\n      <Link\n        className=\"card h-100\"\n        to={`/movies/${id}`}\n      >\n        <Image src={`${BASE_POSTER_URL}${poster_path}`} size=\"big\" rounded />\n        <div className=\"card-body text-center\">\n          <div className=\"rating-group\">\n            <span>{movie.vote_average}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"12\" fill=\"none\" viewBox=\"0 0 13 12\">\n              <path fill=\"#FFDE6A\" d=\"M5.792.356a.515.515 0 0 1 .98 0l1.13 3.477a.515.515 0 0 0 .49.356h3.656c.499 0 .707.639.303.932l-2.958 2.15a.515.515 0 0 0-.187.575l1.13 3.477a.515.515 0 0 1-.793.576L6.585 9.75a.515.515 0 0 0-.606 0L3.022 11.9a.515.515 0 0 1-.793-.577l1.13-3.477a.515.515 0 0 0-.188-.576L.213 5.121a.515.515 0 0 1 .303-.932h3.656a.515.515 0 0 0 .49-.356L5.792.356z\" />\n            </svg>\n          </div>\n          <h5 className=\"card-title\">{movie.title}</h5>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { MovieCard } from '../Movie/Movie';\nimport './MovieList.scss';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: FC<Props> = ({ movies }) => (\n  <div className=\"container\">\n    <ul className=\"row row-movies\">\n      {movies.map((movie: Movie) => (\n        <MovieCard\n          key={movie.id}\n          movie={movie}\n        />\n      ))}\n    </ul>\n  </div>\n);\n","import React, {\n  FC,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { getMovies } from '../../api/utils';\nimport { MoviesList } from '../MoviesList/MoviesList';\nimport './MainPage.scss';\n\nexport const MainPage: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadMovies = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const { results } = await getMovies();\n\n      setMovies(results);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setMovies, setError]);\n\n  useEffect(() => {\n    loadMovies();\n  }, [loadMovies]);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const searchFilmByQuery = useMemo(() => movies.filter(\n    movie => movie.title.toLowerCase().includes(query)\n    || movie.overview.toLowerCase().includes(query),\n  ), [movies, query]);\n\n  if (isLoading) {\n    return (\n      <p className=\"container\">Loading...</p>\n    );\n  }\n\n  return (\n    <>\n      <section className=\"container container_search\">\n        <form className=\"row\" id=\"form__search\">\n          <div className=\"col-12\">\n            <div className=\"input-group\">\n              <input\n                autoComplete=\"off\"\n                type=\"search\"\n                id=\"input_query\"\n                value={query}\n                onChange={handleQuery}\n                placeholder=\"search\"\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n        </form>\n      </section>\n      <main>\n        {!error\n          ? (<MoviesList movies={searchFilmByQuery} />)\n          : (<p>Something went wrong, try to reload</p>)}\n      </main>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { BASE_POSTER_URL } from '../../api/constants';\nimport './MovieDetailsCard.scss';\n\ninterface Props {\n  movie: Details;\n}\n\nexport const MovieDetailsCard: FC<Props> = ({ movie }) => {\n  return (\n    <main className=\"row\">\n      <div className=\"container container-of-details\">\n        <section className=\"col-12 col-md-6 col-lg-5\">\n          <div className=\"card-image\">\n            <Image\n              src={`${BASE_POSTER_URL}${movie.poster_path}`}\n              alt=\"movie_img\"\n              className=\"movie_img\"\n            />\n          </div>\n        </section>\n        <section className=\"card-info col-12 col-md-6 col-lg-7\">\n          <h4 className=\"card-title\">{movie.title}</h4>\n          <div className=\"\">\n            <div className=\"row\">\n              <div className=\"col-8 metadata\">\n                <span>\n                  {movie.vote_average}\n                  {' '}\n                </span>\n                <span>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"12\" fill=\"none\" viewBox=\"0 0 13 12\">\n                    <path fill=\"#FFDE6A\" d=\"M5.792.356a.515.515 0 0 1 .98 0l1.13 3.477a.515.515 0 0 0 .49.356h3.656c.499 0 .707.639.303.932l-2.958 2.15a.515.515 0 0 0-.187.575l1.13 3.477a.515.515 0 0 1-.793.576L6.585 9.75a.515.515 0 0 0-.606 0L3.022 11.9a.515.515 0 0 1-.793-.577l1.13-3.477a.515.515 0 0 0-.188-.576L.213 5.121a.515.515 0 0 1 .303-.932h3.656a.515.515 0 0 0 .49-.356L5.792.356z\" />\n                  </svg>\n                </span>\n              </div>\n              <div className=\"col-8 metadata\">\n                Release:\n                {' '}\n                {movie.release_date ? movie.release_date.split('-').reverse().join('.') : 'not relized'}\n              </div>\n              <div className=\"col-8 metadata\">\n                <span>\n                  Genres:\n                  {' '}\n                  {movie.genres ? movie.genres.map((genre: Genre) => genre.name.toLowerCase()).join(', ') : 'uncnown'}\n                </span>\n              </div>\n              <div className=\"col-8 metadata\">\n                Runtime\n                {' '}\n                {Math.trunc(movie.runtime / 60)}\n                :\n                {(movie.runtime % 60) > 9 ? movie.runtime % 60 : `0${movie.runtime % 60}`}\n              </div>\n              <div className=\"col-8 metadata\">\n                <span>\n                  Homepage:\n                  {' '}\n                </span>\n                <a href={movie.homepage}>{movie.title}</a>\n              </div>\n            </div>\n          </div>\n          <p\n            className=\"text-justify\"\n            style={{ fontSize: '14px' }}\n          >\n            {movie.overview}\n          </p>\n        </section>\n      </div>\n    </main>\n  );\n};\n","import React, {\n  FC,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getMoviesDetails } from '../../api';\nimport { MovieDetailsCard } from '../MovieDetailsCard/MovieDetailsCard';\n\ntype Props = RouteComponentProps<{movieId: string}>;\n\nexport const MovieDetailsPage: FC<Props> = ({ match }) => {\n  const [movieDetails, setMovieDetails] = useState<Details | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const id = Number(match.params.movieId);\n\n  const loadMoviesDetails = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const result = await getMoviesDetails(id);\n\n      setMovieDetails(result);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [id, setIsLoading, setError, setMovieDetails]);\n\n  useEffect(() => {\n    loadMoviesDetails();\n  }, [loadMoviesDetails]);\n\n  if (error) {\n    return (\n      <p>\n        Something went wrong, try to reload\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <p>\n        Loading...\n      </p>\n    );\n  }\n\n  return (\n    <MovieDetailsCard movie={movieDetails as Details} />\n  );\n};\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.scss';\n\nexport const Nav: FC = () => (\n  <nav className=\"nav\">\n    <div className=\"container\">\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"navigation__item\"\n        activeClassName=\"navigation__item--active\"\n      >\n        Home\n      </NavLink>\n      <div className=\"logo\">\n        <a href=\"https://www.themoviedb.org/documentation/api\">\n          <img\n            className=\"logo_image\"\n            src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\"\n            alt=\"TMDB logo\"\n          />\n        </a>\n      </div>\n    </div>\n  </nav>\n);\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MainPage } from './components/MainPage/MainPage';\nimport { MovieDetailsPage } from './components/MovieDetails/MovieDetails';\nimport { Nav } from './components/Nav/Nav';\nimport './App.scss';\n\nexport const App: FC = () => {\n  return (\n    <>\n      <Nav />\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          component={MainPage}\n        />\n        <Route\n          path=\"/movies/:movieId\"\n          component={MovieDetailsPage}\n        />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}